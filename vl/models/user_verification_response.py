# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from vl.models.base_model_ import Model
from vl import util


class UserVerificationResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, code: int=None, verification_rate: int=None):  # noqa: E501
        """UserVerificationResponse - a model defined in Swagger

        :param code: The code of this UserVerificationResponse.  # noqa: E501
        :type code: int
        :param verification_rate: The verification_rate of this UserVerificationResponse.  # noqa: E501
        :type verification_rate: int
        """
        self.swagger_types = {
            'code': int,
            'verification_rate': int
        }

        self.attribute_map = {
            'code': 'code',
            'verification_rate': 'verificationRate'
        }
        self._code = code
        self._verification_rate = verification_rate

    @classmethod
    def from_dict(cls, dikt) -> 'UserVerificationResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UserVerificationResponse of this UserVerificationResponse.  # noqa: E501
        :rtype: UserVerificationResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self) -> int:
        """Gets the code of this UserVerificationResponse.


        :return: The code of this UserVerificationResponse.
        :rtype: int
        """
        return self._code

    @code.setter
    def code(self, code: int):
        """Sets the code of this UserVerificationResponse.


        :param code: The code of this UserVerificationResponse.
        :type code: int
        """
        if code is None:
            raise ValueError("Invalid value for `code`, must not be `None`")  # noqa: E501

        self._code = code

    @property
    def verification_rate(self) -> int:
        """Gets the verification_rate of this UserVerificationResponse.


        :return: The verification_rate of this UserVerificationResponse.
        :rtype: int
        """
        return self._verification_rate

    @verification_rate.setter
    def verification_rate(self, verification_rate: int):
        """Sets the verification_rate of this UserVerificationResponse.


        :param verification_rate: The verification_rate of this UserVerificationResponse.
        :type verification_rate: int
        """
        if verification_rate is None:
            raise ValueError("Invalid value for `verification_rate`, must not be `None`")  # noqa: E501

        self._verification_rate = verification_rate
