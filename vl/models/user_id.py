# coding: utf-8

from __future__ import absolute_import

from .base_model_ import Model
from vl import util

class UserId(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, user_id: str=None, language: str=None):
        """UserId - a model defined in Swagger

        :param user_id: The user_id of this UserId.
        :type user_id: str
        :param language: The language of user.
        :type language: str
        """

        self.swagger_types = {
            'user_id': str,
            'language': str
        }

        self.attribute_map = {
            'user_id': 'userId',
            'language': 'language'
        }

        self._user_id = user_id
        self._language = language

    @classmethod
    def from_dict(cls, dikt) -> 'UserId':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UserId of this UserId.
        :rtype: UserId
        """
        return util.deserialize_model(dikt, cls)

    @property
    def user_id(self) -> str:
        """Gets the user_id of this UserId.


        :return: The user_id of this UserId.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id: str):
        """Sets the user_id of this UserId.


        :param user_id: The user_id of this UserId.
        :type user_id: str
        """

        self._user_id = user_id

    @property
    def language(self) -> str:
        """Gets the language of User.


        :return: The language of this User.
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language: str):
        """Sets the user_id of this UserId.


        :param language: The language of this User.
        :type language: str
        """

        self._language = language
