openapi: 3.0.0
info:
  title: Identity Verification Layer
  description: Verification Layer of VerifID - open source identity verification platform.
  license:
    name: MIT
    url: https://github.com/verifid/vl/blob/master/LICENSE
  version: 1.0.0
servers:
- url: https://api.verifid.app/v1
paths:
  /user/sendUserData:
    post:
      description: Creates a new user for verification. Duplicates are allowed.
      operationId: send_user_data
      requestBody:
        description: User going to be verified.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        200:
          description: User data received successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDataResponse'
        400:
          description: Failed operation, invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: vl.controllers.default_controller
  /user/verify:
    post:
      description: Verifies user with given user id.
      operationId: verify
      requestBody:
        description: User id that is required for verification.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserId'
        required: true
      responses:
        200:
          description: User verification completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserVerificationResponse'
        400:
          description: Failed operation, unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      x-openapi-router-controller: vl.controllers.default_controller
  /image/uploadProfile:
    post:
      description: Uploads a profile image.
      operationId: upload_profile
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/body'
      responses:
        200:
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        204:
          description: Failed operation, no user found with given id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        400:
          description: Failed operation, no user found with given id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: vl.controllers.default_controller
  /image/uploadIdentity:
    post:
      description: Uploads an identity image.
      operationId: upload_identity
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/body_1'
      responses:
        200:
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        204:
          description: Failed operation, no user found with given id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        400:
          description: Failed operation, no user found with given id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: vl.controllers.default_controller
components:
  schemas:
    User:
      required:
      - country
      - dateOfBirth
      - name
      - surname
      type: object
      properties:
        name:
          type: string
        surname:
          type: string
        dateOfBirth:
          type: string
        country:
          type: string
    UserId:
      required:
      - userId
      type: object
      properties:
        userId:
          type: string
    ApiResponse:
      required:
      - code
      - message
      - type
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      example:
        code: 0
        type: type
        message: message
    UserDataResponse:
      required:
      - code
      - message
      - type
      - userId
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
        userId:
          type: string
      example:
        code: 0
        type: type
        message: message
        userId: userId
    UserVerificationResponse:
      required:
      - code
      - verificationRate
      type: object
      properties:
        code:
          type: integer
          format: int32
        verificationRate:
          type: integer
          format: int32
      example:
        code: 0
        verificationRate: 6
    Error:
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    body:
      type: object
      properties:
        userId:
          type: string
        profileImage:
          type: string
          format: binary
    body_1:
      type: object
      properties:
        userId:
          type: string
        identityImage:
          type: string
          format: binary

